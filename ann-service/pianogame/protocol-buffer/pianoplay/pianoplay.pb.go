// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pianoplay.proto

package pianoplay

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// message interfaces here
type UserData struct {
	UUID                 string   `protobuf:"bytes,1,opt,name=UUID,proto3" json:"UUID,omitempty"`
	PianoKey             string   `protobuf:"bytes,2,opt,name=PianoKey,proto3" json:"PianoKey,omitempty"`
	To                   string   `protobuf:"bytes,3,opt,name=To,proto3" json:"To,omitempty"`
	From                 string   `protobuf:"bytes,4,opt,name=From,proto3" json:"From,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *UserData) Reset()         { *m = UserData{} }
func (m *UserData) String() string { return proto.CompactTextString(m) }
func (*UserData) ProtoMessage()    {}
func (*UserData) Descriptor() ([]byte, []int) {
	return fileDescriptor_pianoplay_f86d89351f0da62f, []int{0}
}
func (m *UserData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_UserData.Unmarshal(m, b)
}
func (m *UserData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_UserData.Marshal(b, m, deterministic)
}
func (dst *UserData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_UserData.Merge(dst, src)
}
func (m *UserData) XXX_Size() int {
	return xxx_messageInfo_UserData.Size(m)
}
func (m *UserData) XXX_DiscardUnknown() {
	xxx_messageInfo_UserData.DiscardUnknown(m)
}

var xxx_messageInfo_UserData proto.InternalMessageInfo

func (m *UserData) GetUUID() string {
	if m != nil {
		return m.UUID
	}
	return ""
}

func (m *UserData) GetPianoKey() string {
	if m != nil {
		return m.PianoKey
	}
	return ""
}

func (m *UserData) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *UserData) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

type Response struct {
	Success              bool     `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Msg                  string   `protobuf:"bytes,2,opt,name=Msg,proto3" json:"Msg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_pianoplay_f86d89351f0da62f, []int{1}
}
func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (dst *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(dst, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetSuccess() bool {
	if m != nil {
		return m.Success
	}
	return false
}

func (m *Response) GetMsg() string {
	if m != nil {
		return m.Msg
	}
	return ""
}

func init() {
	proto.RegisterType((*UserData)(nil), "pianoplay.UserData")
	proto.RegisterType((*Response)(nil), "pianoplay.Response")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PianoplayGreeterClient is the client API for PianoplayGreeter service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PianoplayGreeterClient interface {
	Save(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*Response, error)
}

type pianoplayGreeterClient struct {
	cc *grpc.ClientConn
}

func NewPianoplayGreeterClient(cc *grpc.ClientConn) PianoplayGreeterClient {
	return &pianoplayGreeterClient{cc}
}

func (c *pianoplayGreeterClient) Save(ctx context.Context, in *UserData, opts ...grpc.CallOption) (*Response, error) {
	out := new(Response)
	err := c.cc.Invoke(ctx, "/pianoplay.PianoplayGreeter/Save", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PianoplayGreeterServer is the server API for PianoplayGreeter service.
type PianoplayGreeterServer interface {
	Save(context.Context, *UserData) (*Response, error)
}

func RegisterPianoplayGreeterServer(s *grpc.Server, srv PianoplayGreeterServer) {
	s.RegisterService(&_PianoplayGreeter_serviceDesc, srv)
}

func _PianoplayGreeter_Save_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UserData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PianoplayGreeterServer).Save(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pianoplay.PianoplayGreeter/Save",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PianoplayGreeterServer).Save(ctx, req.(*UserData))
	}
	return interceptor(ctx, in, info, handler)
}

var _PianoplayGreeter_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pianoplay.PianoplayGreeter",
	HandlerType: (*PianoplayGreeterServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Save",
			Handler:    _PianoplayGreeter_Save_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pianoplay.proto",
}

func init() { proto.RegisterFile("pianoplay.proto", fileDescriptor_pianoplay_f86d89351f0da62f) }

var fileDescriptor_pianoplay_f86d89351f0da62f = []byte{
	// 195 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2f, 0xc8, 0x4c, 0xcc,
	0xcb, 0x2f, 0xc8, 0x49, 0xac, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x84, 0x0b, 0x28,
	0xc5, 0x71, 0x71, 0x84, 0x16, 0xa7, 0x16, 0xb9, 0x24, 0x96, 0x24, 0x0a, 0x09, 0x71, 0xb1, 0x84,
	0x86, 0x7a, 0xba, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0x70, 0x06, 0x81, 0xd9, 0x42, 0x52, 0x5c, 0x1c,
	0x01, 0x20, 0xc5, 0xde, 0xa9, 0x95, 0x12, 0x4c, 0x60, 0x71, 0x38, 0x5f, 0x88, 0x8f, 0x8b, 0x29,
	0x24, 0x5f, 0x82, 0x19, 0x2c, 0x0a, 0x64, 0x81, 0xf4, 0xbb, 0x15, 0xe5, 0xe7, 0x4a, 0xb0, 0x40,
	0xf4, 0x83, 0xd8, 0x4a, 0x66, 0x5c, 0x1c, 0x41, 0xa9, 0xc5, 0x05, 0xf9, 0x79, 0xc5, 0xa9, 0x42,
	0x12, 0x5c, 0xec, 0xc1, 0xa5, 0xc9, 0xc9, 0xa9, 0xc5, 0xc5, 0x60, 0x2b, 0x38, 0x82, 0x60, 0x5c,
	0x21, 0x01, 0x2e, 0x66, 0xdf, 0xe2, 0x74, 0xa8, 0x05, 0x20, 0xa6, 0x91, 0x1b, 0x97, 0x40, 0x00,
	0xcc, 0x91, 0xee, 0x45, 0xa9, 0xa9, 0x25, 0xa9, 0x45, 0x42, 0x46, 0x5c, 0x2c, 0xc1, 0x89, 0x65,
	0xa9, 0x42, 0xc2, 0x7a, 0x08, 0x0f, 0xc1, 0x1c, 0x2f, 0x85, 0x2c, 0x08, 0xb3, 0x51, 0x89, 0x21,
	0x89, 0x0d, 0xec, 0x63, 0x63, 0x40, 0x00, 0x00, 0x00, 0xff, 0xff, 0x0b, 0x61, 0x78, 0x2e, 0x04,
	0x01, 0x00, 0x00,
}
